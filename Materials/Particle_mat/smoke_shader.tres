[gd_resource type="VisualShader" load_steps=7 format=3 uid="uid://dhnxivjqhduhw"]

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_frkvr"]
parameter_name = "Disolver_Texture"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_j7xem"]
expanded_output_ports = [0]
source = 5
texture_type = 1

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_075a8"]
function = 1

[sub_resource type="VisualShaderNodeVec2Parameter" id="VisualShaderNodeVec2Parameter_1tgdf"]
parameter_name = "Scale"
default_value_enabled = true
default_value = Vector2(1, 1)

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_2jnhk"]
expanded_output_ports = [0]
input_name = "color"

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_330bq"]
constant = Color(0, 0, 0, 1)

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_disabled, diffuse_toon, specular_toon;

uniform vec2 Scale = vec2(1.000000, 1.000000);
uniform sampler2D Disolver_Texture;



void fragment() {
// ColorConstant:8
	vec4 n_out8p0 = vec4(0.000000, 0.000000, 0.000000, 1.000000);


// Vector2Parameter:5
	vec2 n_out5p0 = Scale;


// UVFunc:4
	vec2 n_in4p2 = vec2(0.00000, 0.00000);
	vec2 n_out4p0 = (UV - n_in4p2) * n_out5p0 + n_in4p2;


	vec4 n_out3p0;
// Texture2D:3
	n_out3p0 = texture(Disolver_Texture, n_out4p0);
	float n_out3p1 = n_out3p0.r;


// Input:7
	vec4 n_out7p0 = COLOR;
	float n_out7p4 = n_out7p0.a;


// Output:0
	ALBEDO = vec3(n_out8p0.xyz);
	ALPHA = n_out3p1;
	EMISSION = vec3(n_out7p0.xyz);
	ALPHA_SCISSOR_THRESHOLD = n_out7p4;


}
"
graph_offset = Vector2(-423.517, -117.207)
modes/cull = 2
modes/diffuse = 3
modes/specular = 1
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture2DParameter_frkvr")
nodes/fragment/2/position = Vector2(-260, 140)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture_j7xem")
nodes/fragment/3/position = Vector2(-160, -120)
nodes/fragment/4/node = SubResource("VisualShaderNodeUVFunc_075a8")
nodes/fragment/4/position = Vector2(-580, -120)
nodes/fragment/5/node = SubResource("VisualShaderNodeVec2Parameter_1tgdf")
nodes/fragment/5/position = Vector2(-620, 80)
nodes/fragment/7/node = SubResource("VisualShaderNodeInput_2jnhk")
nodes/fragment/7/position = Vector2(-220, 820)
nodes/fragment/8/node = SubResource("VisualShaderNodeColorConstant_330bq")
nodes/fragment/8/position = Vector2(160, -80)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 2, 3, 1, 0, 1, 5, 0, 4, 1, 4, 0, 3, 0, 7, 4, 0, 19, 7, 0, 0, 5, 8, 0, 0, 0)
